********** Crash dump: **********
Build fingerprint: 'google/razor/flo:6.0.1/MMB29V/2554798:user/release-keys'
pid: 26176, tid: 26278, name: Thread-4227  >>> com.serenegiant.flightdemo <<<
signal 8 (SIGFPE), code -6 (SI_TKILL), fault addr 0x6640
Stack frame #00 pc 00041f50  /system/lib/libc.so (tgkill+12)
Stack frame #01 pc 0003fb5d  /system/lib/libc.so (pthread_kill+32)
Stack frame #02 pc 0001c30f  /system/lib/libc.so (raise+10)
Stack frame #03 pc 0001b434  /data/app/com.serenegiant.flightdemo-2/lib/arm/libimageproc.so (__aeabi_idiv0+8): Routine __aeabi_idiv0 at /s/ndk-toolchain/src/build/../gcc/gcc-4.9/libgcc/config/arm/lib1funcs.S:1337
Stack frame #04 pc 00010880  /data/app/com.serenegiant.flightdemo-2/lib/arm/libimageproc.so (CubicSpline<cv::Point_<int> >::init(bool const&)+2412): Routine CubicSpline<cv::Point_<int> >::init(bool const&) at /Users/saki/projects/FlightDemo/opencv/src/main/jni/imageproc/CubicSpline.h:96
Stack frame #05 pc 00013bd8  /data/app/com.serenegiant.flightdemo-2/lib/arm/libimageproc.so (IPDetectorLine::detect(cv::Mat&, std::vector<DetectRec, std::allocator<DetectRec> >&, cv::Mat&, DetectRec&, DetectParam const&)+4460): Routine CubicSpline<cv::Point_<int> >::reset(std::vector<cv::Point_<int>, std::allocator<cv::Point_<int> > > const&, bool const&) at /Users/saki/projects/FlightDemo/opencv/src/main/jni/imageproc/CubicSpline.h:128
Stack frame #06 pc 00018a64  /data/app/com.serenegiant.flightdemo-2/lib/arm/libimageproc.so (ImageProcessor::do_process(_JNIEnv*)+1332): Routine ImageProcessor::do_process(_JNIEnv*) at /Users/saki/projects/FlightDemo/opencv/src/main/jni/imageproc/ImageProcessor.cpp:387
Stack frame #07 pc 000198b8  /data/app/com.serenegiant.flightdemo-2/lib/arm/libimageproc.so (ImageProcessor::processor_thread_func(void*)+88): Routine ImageProcessor::processor_thread_func(void*) at /Users/saki/projects/FlightDemo/opencv/src/main/jni/imageproc/ImageProcessor.cpp:338
Stack frame #08 pc 0003f45f  /system/lib/libc.so (__pthread_start(void*)+30)
Stack frame #09 pc 00019b43  /system/lib/libc.so (__start_thread+6)
