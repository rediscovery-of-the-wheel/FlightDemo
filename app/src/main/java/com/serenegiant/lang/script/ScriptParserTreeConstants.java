/* Generated By:JavaCC: Do not edit this line. ScriptParserTreeConstants.java Version 6.1_2 */
package com.serenegiant.lang.script;

public interface ScriptParserTreeConstants
{
  public int JJTPARSE = 0;
  public int JJTVOID = 1;
  public int JJTCOMPOUNDSTATEMENT = 2;
  public int JJTSTATEMENTIF = 3;
  public int JJTSTATEMENTSWITCH = 4;
  public int JJTSTATEMENTWHILE = 5;
  public int JJTSTATEMENTDOWHILE = 6;
  public int JJTSTATEMENTFOR = 7;
  public int JJTFORINITSTATEMENT = 8;
  public int JJTEXPRESSIONSTATEMENT = 9;
  public int JJTFORUPDATESTATEMENT = 10;
  public int JJTSTATEMENTGOTO = 11;
  public int JJTSTATEMENTCONTINUE = 12;
  public int JJTSTATEMENTBREAK = 13;
  public int JJTSTATEMENTRETURN = 14;
  public int JJTCONDITIONAL = 15;
  public int JJTCONSTANT = 16;
  public int JJTLOGICALOR = 17;
  public int JJTLOGICALAND = 18;
  public int JJTINCLUSIVEOR = 19;
  public int JJTEXCLUSIVEOR = 20;
  public int JJTAND = 21;
  public int JJTEQUALITY = 22;
  public int JJTNOTEQUALITY = 23;
  public int JJTRELATIONALLT = 24;
  public int JJTRELATIONALGT = 25;
  public int JJTRELATIONALLTE = 26;
  public int JJTRELATIONALGTE = 27;
  public int JJTSHIFTLEFT = 28;
  public int JJTSHIFTRIGHT = 29;
  public int JJTADDITIVEPLUS = 30;
  public int JJTADDITIVEMINUS = 31;
  public int JJTMULTIPLICATIVEMULT = 32;
  public int JJTMULTIPLICATIVEDIV = 33;
  public int JJTMULTIPLICATIVEMOD = 34;
  public int JJTIDENTIFIER = 35;


  public String[] jjtNodeName = {
    "Parse",
    "void",
    "CompoundStatement",
    "StatementIf",
    "StatementSwitch",
    "StatementWhile",
    "StatementDoWhile",
    "StatementFor",
    "ForInitStatement",
    "ExpressionStatement",
    "ForUpdateStatement",
    "StatementGoto",
    "StatementContinue",
    "StatementBreak",
    "StatementReturn",
    "Conditional",
    "Constant",
    "LogicalOR",
    "LogicalAND",
    "InclusiveOR",
    "ExclusiveOR",
    "And",
    "Equality",
    "NotEquality",
    "RelationalLT",
    "RelationalGT",
    "RelationalLTE",
    "RelationalGTE",
    "ShiftLeft",
    "ShiftRight",
    "AdditivePlus",
    "AdditiveMinus",
    "MultiplicativeMult",
    "MultiplicativeDiv",
    "MultiplicativeMod",
    "Identifier",
  };
}
/* JavaCC - OriginalChecksum=5f8c8b2c74b6ddef9d56f310044c7f2c (do not edit this line) */
